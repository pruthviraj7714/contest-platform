// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  username    String?        @unique
  email       String        @unique
  role        Role
  contests    Contest[]   
  submissions Submission[]
  leaderboards Leaderboard[]
}

model Challenge {
  id          String       @id @default(uuid())
  index       Int
  title       String
  description   String
  contestId   String
  notionDocId   String
  startTime   DateTime
  endTime     DateTime
  isActive    Boolean   @default(false)
  contest     Contest      @relation(fields: [contestId], references: [id], onDelete: Cascade)
  submissions Submission[]
  maxPoints   Int

  @@unique([contestId, index])
}

model Contest {
  id          String        @id @default(uuid())
  title       String
  description String
  startTime   DateTime
  endTime     DateTime
  adminId      String
  admin        User   @relation(fields: [adminId], references: [id], onDelete: Cascade)
  leaderboards Leaderboard[]
  challenges  Challenge[]
}

model Submission {
  id     String @id @default(uuid())
  points Int
  submittedAt   DateTime    @default(now())
  challengeId String
  challenge   Challenge @relation(fields: [challengeId], references: [id], onDelete: Cascade)
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Leaderboard {
  userId    String
  contestId String
  rank      Int
  score     Int

  contest Contest @relation(fields: [contestId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, contestId])
  @@unique([contestId, rank])
}

enum Role {
  USER
  ADMIN
}
